{"ast":null,"code":"import axios from \"axios\";\nimport { message } from \"antd\";\nexport const registerUser = values => async dispatch => {\n  dispatch({\n    type: 'LOADING',\n    payload: true\n  });\n\n  try {\n    await axios.post('/api/users/register', values);\n    message.success('User Registered Succsesfully');\n    setTimeout(() => {\n      window.location.href = './login';\n    }, 1000);\n    dispatch({\n      type: 'LOADING',\n      payload: false\n    });\n  } catch (error) {\n    message.error('Something went wrong, please try later');\n    dispatch({\n      type: 'LOADING',\n      payload: false\n    });\n  }\n};\nexport const loginUser = values => async dispatch => {\n  dispatch({\n    type: 'LOADING',\n    payload: true\n  });\n\n  try {\n    const user = await axios.post('/api/users/login', values);\n    message.success('Login sucess');\n    localStorage.setItem('user', JSON.stringify(user.data));\n    setTimeout(() => {\n      window.location.href = '/';\n    }, 1000);\n    dispatch({\n      type: 'LOADING',\n      payload: false\n    });\n  } catch (error) {\n    message.error('INVALID CREDENTIALS');\n    dispatch({\n      type: 'LOADING',\n      payload: false\n    });\n  }\n};","map":{"version":3,"sources":["C:/Users/17028/OneDrive/Desktop/MoJobs/client/src/redux/actions/userActions.js"],"names":["axios","message","registerUser","values","dispatch","type","payload","post","success","setTimeout","window","location","href","error","loginUser","user","localStorage","setItem","JSON","stringify","data"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,OAAR,QAAsB,MAAtB;AAEA,OAAO,MAAMC,YAAY,GAAEC,MAAD,IAAU,MAAMC,QAAN,IAAgB;AAEhDA,EAAAA,QAAQ,CAAC;AAACC,IAAAA,IAAI,EAAG,SAAR;AAAoBC,IAAAA,OAAO,EAAG;AAA9B,GAAD,CAAR;;AAEA,MAAI;AACA,UAAMN,KAAK,CAACO,IAAN,CAAW,qBAAX,EAAmCJ,MAAnC,CAAN;AACAF,IAAAA,OAAO,CAACO,OAAR,CAAgB,8BAAhB;AACAC,IAAAA,UAAU,CAAC,MAAM;AACfC,MAAAA,MAAM,CAACC,QAAP,CAAgBC,IAAhB,GAAqB,SAArB;AACD,KAFS,EAEP,IAFO,CAAV;AAGAR,IAAAA,QAAQ,CAAC;AAACC,MAAAA,IAAI,EAAG,SAAR;AAAoBC,MAAAA,OAAO,EAAG;AAA9B,KAAD,CAAR;AACH,GAPD,CAOE,OAAOO,KAAP,EAAc;AACTZ,IAAAA,OAAO,CAACY,KAAR,CAAc,wCAAd;AACAT,IAAAA,QAAQ,CAAC;AAACC,MAAAA,IAAI,EAAG,SAAR;AAAoBC,MAAAA,OAAO,EAAG;AAA9B,KAAD,CAAR;AACN;AACJ,CAfM;AAiBP,OAAO,MAAMQ,SAAS,GAAEX,MAAD,IAAU,MAAMC,QAAN,IAAgB;AAE7CA,EAAAA,QAAQ,CAAC;AAACC,IAAAA,IAAI,EAAG,SAAR;AAAoBC,IAAAA,OAAO,EAAG;AAA9B,GAAD,CAAR;;AAEA,MAAI;AACD,UAAMS,IAAI,GAAI,MAAMf,KAAK,CAACO,IAAN,CAAW,kBAAX,EAAgCJ,MAAhC,CAApB;AACCF,IAAAA,OAAO,CAACO,OAAR,CAAgB,cAAhB;AACAQ,IAAAA,YAAY,CAACC,OAAb,CAAqB,MAArB,EAA6BC,IAAI,CAACC,SAAL,CAAeJ,IAAI,CAACK,IAApB,CAA7B;AACAX,IAAAA,UAAU,CAAC,MAAM;AACfC,MAAAA,MAAM,CAACC,QAAP,CAAgBC,IAAhB,GAAqB,GAArB;AACD,KAFS,EAEP,IAFO,CAAV;AAGAR,IAAAA,QAAQ,CAAC;AAACC,MAAAA,IAAI,EAAG,SAAR;AAAoBC,MAAAA,OAAO,EAAG;AAA9B,KAAD,CAAR;AACH,GARD,CAQE,OAAOO,KAAP,EAAc;AACTZ,IAAAA,OAAO,CAACY,KAAR,CAAc,qBAAd;AACAT,IAAAA,QAAQ,CAAC;AAACC,MAAAA,IAAI,EAAG,SAAR;AAAoBC,MAAAA,OAAO,EAAG;AAA9B,KAAD,CAAR;AACN;AACJ,CAhBM","sourcesContent":["import axios from \"axios\";\r\nimport {message} from \"antd\";\r\n\r\nexport const registerUser=(values)=>async dispatch=>{\r\n\r\n    dispatch({type : 'LOADING' , payload : true})\r\n\r\n    try {\r\n        await axios.post('/api/users/register' , values)\r\n        message.success('User Registered Succsesfully')\r\n        setTimeout(() => {\r\n          window.location.href='./login'\r\n        }, 1000);\r\n        dispatch({type : 'LOADING' , payload : false})\r\n    } catch (error) {\r\n           message.error('Something went wrong, please try later')\r\n           dispatch({type : 'LOADING' , payload : false})\r\n    }\r\n}\r\n\r\nexport const loginUser=(values)=>async dispatch=>{\r\n\r\n    dispatch({type : 'LOADING' , payload : true})\r\n\r\n    try {\r\n       const user =  await axios.post('/api/users/login' , values)\r\n        message.success('Login sucess')\r\n        localStorage.setItem('user', JSON.stringify(user.data))\r\n        setTimeout(() => {\r\n          window.location.href='/'\r\n        }, 1000);\r\n        dispatch({type : 'LOADING' , payload : false})\r\n    } catch (error) {\r\n           message.error('INVALID CREDENTIALS')\r\n           dispatch({type : 'LOADING' , payload : false})\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}